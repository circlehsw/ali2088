###################################################################
#
#   Streamlit 應用程式：日常維護與更新 標準作業程序 (SOP)
#   版本：1.1
#   最後更新：2025-10-19
#
###################################################################


### 一、您的最終專案架構

您的專案現在由「雲端」和「程式碼」兩部分組成：

A. 雲端服務 (24小時自動運行)
---------------------------------
* Google Cloud SQL：負責您的資料庫，是資料的家。
* Streamlit Community Cloud：負責運行您的網站程式，是網站的家。


B. 核心程式碼檔案 (在您電腦和 GitHub 上)
------------------------------------------
* `4_ATM_merge_interactive.py`：主程式，網站的入口。
* `0_Module/`：存放所有功能模組的資料夾。
* `.streamlit/secrets.toml`：最重要的密碼檔，保管資料庫鑰匙。
* `.gitignore`：告訴 Git 忽略本地的 `3_DB/` 資料夾，非常重要。
* `requirements.txt`：網站的函式庫清單。


---
### 二、未來更新網站的標準流程 (SOP)

以後您想要修改或更新網站，只需要遵循以下「黃金三步驟」：

第一步：在您自己的電腦上修改程式碼
------------------------------------
> (例如：用 VS Code 修改 `0_Module` 裡的 `.py` 檔案來增加新功能或調整細節。)


第二步：(可選但建議) 在本地端測試確認功能正常
------------------------------------------------
> (在終端機執行 `streamlit run 4_ATM_merge_interactive.py`，確保修改沒問題。)


第三步：使用三個 Git 指令上傳更新
------------------------------------
> 在您專案的終端機 (例如 VS Code 內建的 Terminal)，依序執行以下三個指令：

# 1. 打包所有修改
git add .

# 2. 為修改寫下註解 (引號內文字可自訂)
git commit -m "您的修改說明，例如：修正圖表顏色"

# 3. 推送到 GitHub
git push


完成！ Streamlit Cloud 會在幾分鐘內自動抓取您的更新，您的網站就會變成最新版本。


---
### 三、常見問題排解 (FAQ)

問題1：`git push` 被拒絕 (rejected) 怎麼辦？
------------------------------------------------
* 答案：代表雲端比您本地新，請先執行 `git pull --rebase` 再 `git push`。


問題2：網站連不上資料庫 (Connection Timeout) 怎麼辦？
------------------------------------------------------
* 答案：請去 Google Cloud SQL 的「連線」設定，確認「已授權的網路」裡有 `0.0.0.0/0`。


問題3：網站查詢突然變很慢怎麼辦？
------------------------------------
* 答案：請去 DBeaver 檢查 `atm` 資料表的索引 (`idx_mode`, `idx_timestamp`) 是否存在。必要時重新執行 `CREATE INDEX` 指令。

